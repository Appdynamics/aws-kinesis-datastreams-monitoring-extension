---
#This will create this metric in all the tiers, under this path. Please make sure to have a trailing |
#metricPrefix: "Custom Metrics|AWS Kinesis Data Stream|"

#This will create it in specific Tier aka Component. Replace <COMPONENT_ID>. Please make sure to have a trailing |.
#To find out the COMPONENT_ID, please see the screen shot here https://docs.appdynamics.com/display/PRO42/Build+a+Monitoring+Extension+Using+Java

# Metric list can be found here : https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/ak-metricscollected.html

metricPrefix: "Server|Component:<TIER_ID>|Custom Metrics|AWS Kinesis Data Streams|"

accounts:
  - awsAccessKey: ""
    awsSecretKey: ""
    displayAccountName: ""
    # Regions where cloudwatch is registered
    # Allowed values: us-east-2, us-east-1, us-west-1, us-west-2, ap-northeast-1, ap-northeast-2, ap-northeast-3,
    #                ap-south-1, ap-southeast-1, ap-southeast-2, ca-central-1, cn-north-1, cn-northwest-1,
    #                eu-central-1, eu-west-1, eu-west-2, eu-west-3, sa-east-1, us-gov-west-1
    regions: ["us-west-2"]

credentialsDecryptionConfig:
  enableDecryption: "false"
  encryptionKey:

proxyConfig:
  host:
  port:
  username:
  password:

# TODO comments check and filter by streamname
# Filters based on dimensions, values accepts comma separated values and regex patterns. If `.*` is used, all are
# monitored and if empty, none are monitored.
dimensions:
  # Dimension
  - name: "StreamName"
    displayName: "Stream Name"
    values: [".*"]
  # Dimension Consumer Name should be used if a Consumer is configured (there is an active subscription).
  # Keep values empty if no consumer is configured.
  - name: "ConsumerName"
    displayName: "Consumer Name"
    values: []
  # The dimension ShardId can only be used when retrieving Enhanced Shard-level Metrics.
  # To get this level of data, you must specifically enable it for the stream using the EnableEnhancedMonitoring operation.
  # Please refer https://docs.aws.amazon.com/kinesis/latest/APIReference/API_EnableEnhancedMonitoring.html for enabling.
  # AWS will charge for enhanced metrics emitted from Kinesis.
#  - name: "ShardId"
#    displayName: "Shard Id"
#    values: [".*"]

concurrencyConfig:
  noOfAccountThreads: 3
  noOfRegionThreadsPerAccount: 3
  noOfMetricThreadsPerRegion: 3
  #Thread timeout in seconds
  threadTimeOut: 30

#Allowed values are Basic and Detailed. Refer https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-cloudwatch-new.html for more information
# Basic will fire CloudWatch API calls every 5 minutes
# Detailed will fire CloudWatch API calls every 1 minutes
cloudWatchMonitoring: "Basic"

regionEndPoints:
  us-east-1 : monitoring.us-east-1.amazonaws.com
  us-east-2 : monitoring.us-east-2.amazonaws.com
  us-west-1 : monitoring.us-west-1.amazonaws.com
  us-west-2 : monitoring.us-west-2.amazonaws.com
  ap-northeast-1 : monitoring.ap-northeast-1.amazonaws.com
  ap-northeast-2: monitoring.ap-northeast-2.amazonaws.com
  ap-northeast-3 : monitoring.ap-northeast-3.amazonaws.com
  ap-south-1 : monitoring.ap-south-1.amazonaws.com
  ap-southeast-1 : monitoring.ap-southeast-1.amazonaws.com
  ap-southeast-2 : monitoring.ap-southeast-2.amazonaws.com
  ca-central-1 : monitoring.ca-central-1.amazonaws.com
  cn-north-1 : monitoring.cn-north-1.amazonaws.com.cn
  cn-northwest-1 : monitoring.cn-northwest-1.amazonaws.com.cn
  eu-central-1 : monitoring.eu-central-1.amazonaws.com
  eu-west-1 : monitoring.eu-west-1.amazonaws.com
  eu-west-2 : monitoring.eu-west-2.amazonaws.com
  eu-west-3 : monitoring.eu-west-3.amazonaws.com
  sa-east-1 : monitoring.sa-east-1.amazonaws.com
  us-gov-west-1 : monitoring.us-gov-west-1.amazonaws.com

# Global metrics config for all accounts
metricsConfig:
    # By default, all metrics retrieved from cloudwatch are 'Average' values.
    # This option allows you to override the metric type.
    #
    # Allowed statTypes are: ave, max, min, sum, samplecount
    #
    # Note: Irrespective of the metric type, value will still be reported as
    # Observed value to the Controller
    # Below configuration is only for Basic Stream-level Metrics, for Enhanced Shard-level metrics you will first have
    # to enable it for the stream using the EnableEnhancedMonitoring operation.
    # Please refer https://docs.aws.amazon.com/kinesis/latest/APIReference/API_EnableEnhancedMonitoring.html for enabling.
    # AWS will charge for enhanced metrics emitted from Kinesis.
    includeMetrics:
       - name: "GetRecords.Bytes"
         alias: "GetRecords Records (Unit: byte, StatType: sum)"
         statType: "sum"
         aggregationType: "AVERAGE"
         timeRollUpType: "AVERAGE"
         clusterRollUpType: "INDIVIDUAL"
         delta: false
         multiplier: 1
         # GetRecords.IteratorAge is deprecated, use GetRecords.IteratorAgeMilliseconds
#       - name: "GetRecords.IteratorAge"
#         alias: "GetRecords Iterator Age"
#         statType: "max"
#         aggregationType: "AVERAGE"
#         timeRollUpType: "AVERAGE"
#         clusterRollUpType: "INDIVIDUAL"
#         delta: false
#         multiplier: 1
       - name: "GetRecords.IteratorAgeMilliseconds"
         alias: "GetRecords Iterator Age (Unit: ms, StatType: max)"
         statType: "max"
         aggregationType: "AVERAGE"
         timeRollUpType: "AVERAGE"
         clusterRollUpType: "INDIVIDUAL"
         delta: false
         multiplier: 1
       - name: "GetRecords.Latency"
         alias: "GetRecords Latency (Unit: ms, StatType: ave)"
         statType: "ave"
         aggregationType: "AVERAGE"
         timeRollUpType: "AVERAGE"
         clusterRollUpType: "INDIVIDUAL"
         delta: false
         multiplier: 1
       - name: "GetRecords.Records"
         alias: "GetRecords Records (Unit: count, StatType: sum)"
         statType: "sum"
         aggregationType: "AVERAGE"
         timeRollUpType: "AVERAGE"
         clusterRollUpType: "INDIVIDUAL"
         delta: false
         multiplier: 1
       - name: "GetRecords.Success"
         alias: "GetRecords Success (Unit: , StatType: )"
         statType: "ave"
         aggregationType: "AVERAGE"
         timeRollUpType: "AVERAGE"
         clusterRollUpType: "INDIVIDUAL"
         delta: false
         multiplier: 1
       - name: "IncomingBytes"
         alias: "Incoming Bytes (Unit: byte, StatType: sum)"
         statType: "sum"
         aggregationType: "AVERAGE"
         timeRollUpType: "AVERAGE"
         clusterRollUpType: "INDIVIDUAL"
         delta: false
         multiplier: 1
       - name: "IncomingRecords"
         alias: "Incoming Records (Unit: count, StatType: sum)"
         statType: "sum"
         aggregationType: "AVERAGE"
         timeRollUpType: "AVERAGE"
         clusterRollUpType: "INDIVIDUAL"
         delta: false
         multiplier: 1
       - name: "PutRecord.Bytes"
         alias: "PutRecord Bytes (Unit: byte, StatType: sum)"
         statType: "sum"
         aggregationType: "AVERAGE"
         timeRollUpType: "AVERAGE"
         clusterRollUpType: "INDIVIDUAL"
         delta: false
         multiplier: 1
       - name: "PutRecord.Latency"
         alias: "PutRecord Latency (Unit: ms, StatType: sum)"
         statType: "ave"
         aggregationType: "AVERAGE"
         timeRollUpType: "AVERAGE"
         clusterRollUpType: "INDIVIDUAL"
         delta: false
         multiplier: 1
       - name: "PutRecord.Success"
         alias: "PutRecord Success (StatType: ave)"
         statType: "ave"
         aggregationType: "AVERAGE"
         timeRollUpType: "AVERAGE"
         clusterRollUpType: "INDIVIDUAL"
         delta: false
         multiplier: 1
       - name: "PutRecords.Bytes"
         alias: "PutRecords Bytes (Unit: byte, StatType: sum)"
         statType: "sum"
         aggregationType: "AVERAGE"
         timeRollUpType: "AVERAGE"
         clusterRollUpType: "INDIVIDUAL"
         delta: false
         multiplier: 1
       - name: "PutRecords.Latency"
         alias: "PutRecords Latency (Unit: byte, StatType: ave)"
         statType: "ave"
         aggregationType: "AVERAGE"
         timeRollUpType: "AVERAGE"
         clusterRollUpType: "INDIVIDUAL"
         delta: false
         multiplier: 1
       - name: "PutRecords.Records"
         alias: "PutRecords Records (Unit: count, StatType: sum)"
         statType: "sum"
         aggregationType: "AVERAGE"
         timeRollUpType: "AVERAGE"
         clusterRollUpType: "INDIVIDUAL"
         delta: false
         multiplier: 1
       - name: "PutRecords.Success"
         alias: "PutRecords Success (StatType: ave)"
         statType: "ave"
         aggregationType: "AVERAGE"
         timeRollUpType: "AVERAGE"
         clusterRollUpType: "INDIVIDUAL"
         delta: false
         multiplier: 1
       - name: "ReadProvisionedThroughputExceeded"
         alias: "Read Throughput Exceeded (Unit: Count/Request, StatType: ave)"
         statType: "ave"
         aggregationType: "AVERAGE"
         timeRollUpType: "AVERAGE"
         clusterRollUpType: "INDIVIDUAL"
         delta: false
         multiplier: 1
       - name: "SubscribeToShard.RateExceeded"
         alias: "Subscribe to Shard Exceeded"
         statType: "ave"
         aggregationType: "AVERAGE"
         timeRollUpType: "AVERAGE"
         clusterRollUpType: "INDIVIDUAL"
         delta: false
         multiplier: 1
       - name: "SubscribeToShard.Success"
         alias: "Subscribe to Shard Success"
         statType: "ave"
         aggregationType: "AVERAGE"
         timeRollUpType: "AVERAGE"
         clusterRollUpType: "INDIVIDUAL"
         delta: false
         multiplier: 1
       - name: "SubscribeToShardEvent.Bytes"
         alias: "SubscribeToShardEvent Outgoing Bytes (Unit: byte, StatType: sum)"
         statType: "sum"
         aggregationType: "AVERAGE"
         timeRollUpType: "AVERAGE"
         clusterRollUpType: "INDIVIDUAL"
         delta: false
         multiplier: 1
       - name: "SubscribeToShardEvent.MillisBehindLatest"
         alias: "SubscribeToShardEvent MillisBehindLatest (Unit: ms, StatType: max)"
         statType: "max"
         aggregationType: "AVERAGE"
         timeRollUpType: "AVERAGE"
         clusterRollUpType: "INDIVIDUAL"
         delta: false
         multiplier: 1
       - name: "SubscribeToShardEvent.Records"
         alias: "SubscribeToShardEvent Outgoing Records (Unit: count, StatType: sum)"
         statType: "sum"
         aggregationType: "AVERAGE"
         timeRollUpType: "AVERAGE"
         clusterRollUpType: "INDIVIDUAL"
         delta: false
         multiplier: 1
       - name: "SubscribeToShardEvent.Success"
         alias: "SubscribeToShardEvent Success (StatType: ave)"
         statType: "ave"
         aggregationType: "AVERAGE"
         timeRollUpType: "AVERAGE"
         clusterRollUpType: "INDIVIDUAL"
         delta: false
         multiplier: 1
       - name: "WriteProvisionedThroughputExceeded"
         alias: "Write Throughput Exceeded (Unit: Count/Request, StatType: ave)"
         statType: "ave"
         aggregationType: "AVERAGE"
         timeRollUpType: "AVERAGE"
         clusterRollUpType: "INDIVIDUAL"
         delta: false
         multiplier: 1
       # Start of config for Enhanced Shard-level metrics. for Enhanced Shard-level metrics you will first have
       # to enable it for the stream using the EnableEnhancedMonitoring operation.
       # Please refer https://docs.aws.amazon.com/kinesis/latest/APIReference/API_EnableEnhancedMonitoring.html for enabling.
       # AWS will charge for enhanced metrics emitted from Kinesis.
#       - name: "IncomingBytes"
#         alias: "Incoming Bytes"
#         statType: "ave"
#         aggregationType: "AVERAGE"
#         timeRollUpType: "AVERAGE"
#         clusterRollUpType: "INDIVIDUAL"
#         delta: false
#         multiplier: 1
#       - name: "IncomingRecords"
#         alias: "Incoming Records"
#         statType: "ave"
#         aggregationType: "AVERAGE"
#         timeRollUpType: "AVERAGE"
#         clusterRollUpType: "INDIVIDUAL"
#         delta: false
#         multiplier: 1
#       - name: "IteratorAgeMilliseconds"
#         alias: "Iterator Age Milliseconds"
#         statType: "ave"
#         aggregationType: "AVERAGE"
#         timeRollUpType: "AVERAGE"
#         clusterRollUpType: "INDIVIDUAL"
#         delta: false
#         multiplier: 1
#       - name: "OutgoingBytes"
#         alias: "Outgoing Bytes"
#         statType: "ave"
#         aggregationType: "AVERAGE"
#         timeRollUpType: "AVERAGE"
#         clusterRollUpType: "INDIVIDUAL"
#         delta: false
#         multiplier: 1
#       - name: "OutgoingRecords"
#         alias: "Outgoing Records"
#         statType: "ave"
#         aggregationType: "AVERAGE"
#         timeRollUpType: "AVERAGE"
#         clusterRollUpType: "INDIVIDUAL"
#         delta: false
#         multiplier: 1
#       - name: "ReadProvisionedThroughputExceeded"
#         alias: "Shard Level Read Provisioned Throughput Exceeded"
#         statType: "ave"
#         aggregationType: "AVERAGE"
#         timeRollUpType: "AVERAGE"
#         clusterRollUpType: "INDIVIDUAL"
#         delta: false
#         multiplier: 1
#       - name: "WriteProvisionedThroughputExceeded"
#         alias: "Shard Level Write Provisioned Throughput Exceeded"
#         statType: "ave"
#         aggregationType: "AVERAGE"
#         timeRollUpType: "AVERAGE"
#         clusterRollUpType: "INDIVIDUAL"
#         delta: false
#         multiplier: 1
    metricsTimeRange:
      startTimeInMinsBeforeNow: 5
      endTimeInMinsBeforeNow: 0

    # Rate limit ( per second ) for GetMetricStatistics, default value is 400. https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cloudwatch_limits.html
    getMetricStatisticsRateLimit: 400

    #
    # The max number of retry attempts for failed retryable requests
    # (ex: 5xx error responses from a service) or throttling errors
    #
    maxErrorRetrySize: 0
...
